introduction:
  title: 简介
  whatsNew:
    title: Grails 6 的新特性?
    dependencyUpgrades: 更新依赖项
gettingStarted:
  title: 入门指南
  requirements: 安装要求
  downloadingAndInstalling: 下载和安装
  creatingAnApplication: 创建一个应用程序
  aHelloWorldExample: 使用 Grails 创建一个简单的 Web 应用程序
  usingInteractiveMode: 使用交互模式
  ide: 在 IDE 中设置
  conventionOverConfiguration: Grails 目录结构和约定优于配置
  runningAndDebuggingAnApplication: 运行和调试应用程序
  testingAnApplication: 测试应用程序
  deployingAnApplication: 部署应用程序
  supportedJavaEEContainers: 支持的 Java EE 容器
  creatingArtefacts: 创建工件
  generatingAnApplication: 生成应用程序
upgrading:
  title: 从之前版本升级
  upgrading50x: 从 Grails 5 升级到 Grails 6
  upgrading40x: 从 Grails 4 升级到 Grails 5
  upgrading33x: 从 Grails 3.3.x 升级到 Grails 4
conf:
  title: 配置
  config:
    title: 基本配置
    ymlOptions: YML 格式配置选项
    builtInOptions: 内置选项
    logging:
      title: 日志记录
      loggerName: 记录器名称
      maskingRequestParametersFromStacktraceLogs: 从堆栈跟踪日志中屏蔽请求参数
      externalLoggingConfiguration: 外部配置文件
    configGORM: GORM 配置
    proxyConfig: 配置 HTTP 代理
  applicationClass:
    title: 应用程序类
    executing: 执行应用程序类
    customizing: 自定义应用程序类
    applicationLifeCycle: 应用程序生命周期
  environments: 环境
  dataSource:
    title: 数据源
    dataSourcesAndEnvironments: 数据源和环境
    automaticDatabaseMigration: 自动数据库迁移
    transactionAwareDataSourceProxy: 事务感知的数据源代理
    databaseConsole: 数据库控制台
    multipleDatasources: 多数据源
  versioning: 版本控制
  dependencyResolution: 依赖解析
commandLine:
  title: 命令行
  interactiveMode: 交互模式
  creatingCustomCommands: 创建自定义命令
  creatingProject: 创建一个 Grails 项目
GORM:
  title: 对象关系映射（GORM）
  quickStartGuide:
    title: 快速入门指南
    basicCRUD: 基本 CRUD
  furtherReading: 关于 GORM 的进一步阅读

theWebLayer:
  title: Web 层
  controllers:
    title: 控制器
    understandingControllersAndActions: 理解控制器和动作
    controllersAndScopes: 控制器和作用域
    modelsAndViews: 模型和视图
    redirectsAndChaining: 重定向和链式调用
    dataBinding: 数据绑定
    jsonResponses: 以 JSON 响应
    moreOnJSONBuilder: 关于 JSONBuilder 的更多内容
    xmlResponses: 以 XML 响应
    uploadingFiles: 上传文件
    commandObjects: 命令对象
    formtokens: 处理重复表单提交
    typeConverters: 简单类型转换器
    controllerExceptionHandling: 声明式控制器异常处理
  gsp:
    title: Groovy 服务器页面
  urlmappings:
    title: URL 映射
    mappingToControllersAndActions: 映射到控制器和动作
    restfulMappings: 映射到 REST 资源
    redirectMappings: URL 映射中的重定向
    embeddedVariables: 嵌入式变量
    mappingToViews: 映射到视图
    mappingToResponseCodes: 映射到响应代码
    mappingHTTP: 映射到 HTTP 方法
    mappingWildcards: 映射通配符
    automaticLinkRewriting: 自动链接重写
    applyingConstraints: 应用约束
    namedMappings: 命名的 URL 映射
    customizingUrlFormat: 自定义 URL 格式
    namespacedControllers: 命名空间控制器
  cors: 跨源资源共享（CORS）
  interceptors:
    title: 拦截器
    definingInterceptors: 定义拦截器
    interceptorMatching: 与拦截器匹配请求
    interceptorOrdering: 拦截器执行顺序
  contentNegotiation: 内容协商
traits:
  title: 特性
  traitsprovided:
    title: Grails 提供的特性
    example:
      title: WebAttributes 特性示例
REST:
  title: REST
  domainResources: 域类作为 REST 资源
  urlMappings: 映射到 REST 资源
  linkingToResources: 从 GSP 页面链接到 REST 资源
  versioningResources: 版本控制 REST 资源
  restfulControllers:
    title: 实现 REST 控制器
    extendingRestfulController: 扩展 RestfulController 超类
    restControllersStepByStep: 逐步实现 REST 控制器
    generatingRestControllers: 使用脚手架生成 REST 控制器
  callingRestServices: 使用 HttpClient 调用 REST 服务
  restProfile: REST 概要
  jsonViews:
    title: JSON 视图
    jsonViewsSetup: 入门指南
    jsonViewsCreating: 创建 JSON 视图
    jsonViewsAndTemplates: JSON 视图模板
    jsonViewsAndDomainClasses: 使用 JSON 视图渲染域类
    jsonViewsTemplatesAndConventions: 根据约定生成 JSON 视图
  renderers:
    title: 自定义响应渲染
    defaultRenderers: 自定义默认渲染器
    customRenderers: 实现自定义渲染器
    gspRenderers: 使用 GSP 自定义渲染
  hypermedia:
    title: 应用状态引擎的超媒体
    hal: HAL 支持
    atom: Atom 支持
    vndError: Vnd.Error 支持
  binding: 资源绑定定制
  RSSAndAtom: RSS 和 Atom
async:
  title: 异步编程
validation:
  title: 验证
  constraints: 声明约束
  validatingConstraints: 验证约束
  sharingConstraints: 在类之间共享约束
  validationOnTheClient: 客户端验证
  validationAndInternationalization: 验证和国际化
  validationNonDomainAndCommandObjectClasses: 将验证应用于其他类
services:
  title: 服务层
  declarativeTransactions:
    title: 声明式事务
    transactionsMultiDataSource: 事务和多数据源
    transactionsRollbackAndTheSession: 事务回滚和会话
  scopedServices: 作用域服务
  dependencyInjectionServices: 依赖注入和服务
staticTypeCheckingAndCompilation:
  title: 静态类型检查和编译
  grailsCompileStatic: GrailsCompileStatic 注解
  grailsTypeChecked: GrailsTypeChecked 注解
testing:
  title: 测试
  unitTesting: 单元测试
  integrationTesting: 集成测试
  functionalTesting: 功能测试
i18n:
  title: 国际化
  understandingMessageBundles: 理解消息束
  changingLocales: 更改区域设置
  readingMessages: 阅读消息
  scaffoldingAndI18n: 脚手架和国际化
security:
  title: 安全
  securingAgainstAttacks: 防止攻击
  xssPrevention: 跨站脚本（XSS）预防
  codecs: 对象编码和解码
  authentication: 认证
  securityPlugins:
    title: 安全插件
    springSecurity: Spring Security
plugins:
  title: 插件
  creatingAndInstallingPlugins: 创建和安装插件
  repositories: 插件仓库
  providingBasicArtefacts: 提供基本工件
  evaluatingConventions: 评估约定
  hookingIntoRuntimeConfiguration: 连接到运行时配置
  addingMethodsAtCompileTime: 编译时添加方法
  addingDynamicMethodsAtRuntime: 在运行时添加动态方法
  participatingInAutoReloadEvents: 参与自动重新加载事件
  understandingPluginLoadOrder: 理解插件加载顺序
  artefactApi:
    title: 工件 API
    queryingArtefacts: 查询可用工件
    customArtefacts: 添加自定义工件类型
spring:
  title: Grails 和 Spring
  springdslAdditional: 配置附加 Bean
  springdsl: 使用 Beans DSL 运行 Spring
  theBeanBuilderDSLExplained: BeanBuilder DSL 解释
  propertyPlaceholderConfiguration: 属性占位符配置
  propertyOverrideConfiguration: 属性覆盖配置
  actuators: Spring Boot 执行器
scaffolding: 脚手架
deployment:
  title: 部署
  deploymentStandalone: 独立部署
  deploymentContainer: 容器部署（例如，Tomcat）
  deploymentTasks: 部署配置任务
contributing:
  title: 贡献到 Grails
  issues: 在 Github 的问题跟踪器中报告问题
  build: 从源代码构建和运行测试
  patchesCore: 向 Grails 核心提交补丁
  patchesDoc: 向 Grails 文档提交补丁